import pandas as pd
import numpy as np

#    read csv file and display all columns when dataframe is called

p2p_df = pd.read_csv(r'C:\Users\TWALTON\Desktop\p2p_all_ddo\merged3.csv', thousands=',')
pd.options.display.max_columns = None

#    Normalizing the dates in 'Requisition Date', 'PO Date', and 'Receipt Date' columns

p2p_df['Requisition Date'] = pd.to_datetime(p2p_df['Requisition Date'], errors='coerce')
p2p_df['PO Date'] = pd.to_datetime(p2p_df['PO Date'], errors='coerce')
p2p_df['Receipt Date'] = pd.to_datetime(p2p_df['Receipt Date'], errors='coerce')

#    Creating two new columns to calculate time lapse between Requisition Date to PO Date and PO Date to Receipt Date

p2p_df['Requisition to PO Date'] = p2p_df['PO Date'] - p2p_df['Requisition Date']
p2p_df['PO to Receipt'] = p2p_df['Receipt Date'] - p2p_df['PO Date']

#    Changing the data type of the 'PO Amount' column to float (maybe should be string, not sure what is better)

p2p_df['PO Amount'] = p2p_df['PO Amount'].astype(float)

#    Changing the data types of the columns created above to float (again not sure if this is the best idea, maybe should be string)

p2p_df['Requisition to PO Date'] = p2p_df['Requisition to PO Date'].astype(str).str.extract('(\d+)').astype(float)
p2p_df['PO to Receipt'] = p2p_df['PO to Receipt'].astype(str).str.extract('(\d+)').astype(float)

#    Creating a new dataframe from columns I've deemed useful

p2p_df1 = p2p_df[['Requisitioner Name','Requisition ID', 'Requisition Date', 'Requisition Status', 'PO Number', 'PO Date', 
                  'PO Buyer Name', 'PO Line', 'Contract ID' , 'PO Quantity', 'PO Amount', 'DDO PO', 'PO Vendor Name', 
                  'Service Start Date', 'Service End Date', 'Department ID PO', 'Fund Code PO', 'Class Field PO', 
                  'Project CostinG Business Unit PO', 'Project ID PO', 'Receipt ID', 'Receipt Date', 'Voucher ID', 
                  'Voucher Amount', 'Invoice ID', 'Voucher Entered Date', 'Total PO Amount', 'Total Amount Received', 
                  'Purchase Method', 'Requisition to PO Date', 'PO to Receipt']]
                  
#    Creating a list of requisition creators and creating a variable to call to filter on the names in the requisitioner_list

requisitioner_list = ['Robinson Debra', 'Walton Timothy', 'Rhoads Jay', 'Garcia Karen', 'Birdwell Diana']
p2p_imd_req = p2p_df1[p2p_df1['Requisitioner Name'].isin(requisitioner_list)]
